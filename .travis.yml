language: bash

env:
  global:
  - IMAGE_NAME=guangie88/jre-python

matrix:
  include:
  # alpine-apk
  - services: docker
    env:
    - DOCKER_DIR=alpine-apk
    - ALPINE_VERS=3.8
    - JAVA_VERS=8
    - PYTHON_VERS=2
    - TAG=$DOCKER_DIR-$ALPINE_VERS-jre$JAVA_VERS-python$PYTHON_VERS
  - services: docker
    env:
    - DOCKER_DIR=alpine-apk
    - ALPINE_VERS=3.8
    - JAVA_VERS=8
    - PYTHON_VERS=3
    - TAG=$DOCKER_DIR-$ALPINE_VERS-jre$JAVA_VERS-python$PYTHON_VERS
  # ubuntu-apt
  - services: docker
    env:
    - DOCKER_DIR=ubuntu-apt
    - UBUNTU_VERS=18.04
    - JAVA_VERS=8
    - PYTHON_VERS=2.7
    - TAG=$DOCKER_DIR-$UBUNTU_VERS-jre$JAVA_VERS-python$PYTHON_VERS
  - services: docker
    env:
    - DOCKER_DIR=ubuntu-apt
    - UBUNTU_VERS=18.04
    - JAVA_VERS=8
    - PYTHON_VERS=3.6
    - TAG=$DOCKER_DIR-$UBUNTU_VERS-jre$JAVA_VERS-python$PYTHON_VERS
  - services: docker
    env:
    - DOCKER_DIR=ubuntu-apt
    - UBUNTU_VERS=18.04
    - JAVA_VERS=8
    - PYTHON_VERS=3.7
    - TAG=$DOCKER_DIR-$UBUNTU_VERS-jre$JAVA_VERS-python$PYTHON_VERS

before_script:
- set -e
- docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"

script:
- |
  if [ ! -z "$ALPINE_VERS" ]; then
    docker build $DOCKER_DIR -t $IMAGE_NAME:$TAG \
    --build-arg ALPINE_VERS=$ALPINE_VERS \
    --build-arg JAVA_VERS=$JAVA_VERS \
    --build-arg PYTHON_VERS=$PYTHON_VERS
  elif [ ! -z "$UBUNTU_VERS" ]; then
    docker build $DOCKER_DIR -t $IMAGE_NAME:$TAG \
    --build-arg UBUNTU_VERS=$UBUNTU_VERS \
    --build-arg JAVA_VERS=$JAVA_VERS \
    --build-arg PYTHON_VERS=$PYTHON_VERS
  fi

after_success:
- |
  if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    docker push $IMAGE_NAME:$TAG;
  fi

branches:
  only:
  - master
